################################################################ Chirp e Melhorias ############################################################
OBS: desinstalar hex e phx.new
    mix archive.uninstall phx_new
    mix archive.uninstall hex
Instalar:
    mix archive.install hex phx_new 1.5.7


  mix phx.new chirp --live
  cd chirp
  mix phx.gen.live Timeline Post posts username body likes_count:integer reposts_count:integer visible:integer


# Não é um pré-requisito, mas se interessar, para instalar o pacote fontwesome.
# Esse pacote é um "parente" do bootstrap, contendo recursos interessantes para web.
# Procedimento:
# Dentro do projeto phoenix, ir na pasta assets:
  cd ./assets
  npm install && node node_modules/webpack/bin/webpack.js --mode development

#Instalar a edição livre do fontawesome:
  npm install --save-dev @fortawesome/fontawesome-free

# Você irá ver no package.json uma atualização, algo como a entrada abaixo:
#  ..
#  "devDependencies": {
#      "@babel/core": "^7.0.0",
#      "@babel/preset-env": "^7.0.0",
#      "@fortawesome/fontawesome-free": "^5.9.0",
#  ...

# Você necessita também instalar o pacote file-loader:
  npm install file-loader

# Modificar o webpack.config.js para permitir copiar fontes e extrair de arquivos SCSS:
  module: {
      rules: [
        {
          test: /\.js$/,
          exclude: /node_modules/,
          use: {
            loader: 'babel-loader'
          }
        },
        {
          test: /\.[s]?(css|sass|scss)$/,
          use: [MiniCssExtractPlugin.loader, 'css-loader', 'sass-loader']
        },
        {
          test: /\.(woff(2)?|ttf|eot|svg)(\?v=\d+\.\d+\.\d+)?$/,
          use: [{
            loader: 'file-loader',
            options: {
              name: '[name].[ext]',
              outputPath: '../fonts'
            }
          }]
        }
      ]
    },
  ...

# Em seguida, modifique o arquivo app.scss (abaixo a opção também de Bootrstrap - remova-o caso não o use):
# Observar necessidade de ordem nos imports
@import "./custom.scss";
@import "~bootstrap/scss/bootstrap";
@import "~@fortawesome/fontawesome-free/scss/fontawesome";
@import "~@fortawesome/fontawesome-free/scss/regular";
@import "~@fortawesome/fontawesome-free/scss/solid";
@import "~@fortawesome/fontawesome-free/scss/brands";

# Finalmente, um arquivo custom.scss (remova a linha contendo $primary, isso seria para substituir o Bootrstap):
# arquivo: seuProjeto/assets/css/custom.scss

.post{
  border: 1px dotted gray;
}

/* Boostrap overrides */
$primary: #F92653;
/* Fontawesome 5 config */
$fa-font-path: "~@fortawesome/fontawesome-free/webfonts"

################################################################################### Código do PostComponent
defmodule ChirpWeb.PostLive.PostComponent do
  use ChirpWeb, :live_component

  def render(assigns) do
    ~L"""
    <div id="post-<%= @post.id %>" class="post">
      <div class="row">
        <div class="column column-10">
          <div class="post-avatar">
            <img src="https://avatarfiles.alphacoders.com/103/103373.png" height="32" alt="<%= @post.username %>">
          </div>
        </div>
        <div class="column column-90 post-body">
          <b>@<%= @post.username %></b>
          <br/>
          <%= @post.body %>
        </div>
      </div>

      <div class="row">
        <div class="column">
          <a href="#" phx-click="like" phx-target="<%= @myself %>">
            <i class="fa fa-heart"></i> <%= @post.likes_count %>
          </a>
        </div>
        <div class="column">
          <a href="#" phx-click="repost" phx-target="<%= @myself %>">
            <i class="fa fa-retweet"></i> <%= @post.reposts_count %>
          </a>
        </div>
        <div class="column">
          <%= live_patch to: Routes.post_index_path(@socket, :edit, @post.id) do %>
            <i class="fa fa-edit"></i>
          <% end %>
          <span>  </span>
          <%= link to: "#", phx_click: "delete", phx_value_id: @post.id, data: [confirm: "Remover?"] do %>
            <i class="fa fa-trash" onclick="carrega()"></i>
          <% end %>
        </div>
      </div>
    </div>
    <>
    function carrega() {
        window.location.reload();
    }
    </>
    """
  end
  def handle_event("like", _, socket) do
    Chirp.Timeline.inc_likes(socket.assigns.post)
    {:noreply, socket}
  end
  def handle_event("repost", _, socket) do
    Chirp.Timeline.inc_reposts(socket.assigns.post)
    {:noreply, socket}
  end
end

### TimeLine
  # programado
  def inc_likes(%Post{id: id}) do
    {1, [post]} =
      from(p in Post, where: p.id == ^id, select: p)
      |> Repo.update_all(inc: [likes_count: 1])

    broadcast({:ok, post}, :post_updated)
  end

  def inc_reposts(%Post{id: id}) do
    {1, [post]} =
      from(p in Post, where: p.id == ^id, select: p)
      |> Repo.update_all(inc: [reposts_count: 1])

    broadcast({:ok, post}, :post_updated)
  end
  #End Programado

## Index.ex dos Posts
  #Progamado
  @impl true
  def handle_info({:post_created, post}, socket) do
    {:noreply, update(socket, :posts, fn posts -> [post | posts] end)}
  end

  def handle_info({:post_updated, post}, socket) do
    {:noreply, update(socket, :posts, fn posts -> [post | posts] end)}
  end

  def handle_info({:post_deleted, post}, socket) do
    {:noreply, update(socket, :posts, fn posts -> [post | posts] end)}
  end
  # End Programado